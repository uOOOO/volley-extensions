import com.android.build.gradle.AppPlugin
import com.android.build.gradle.LibraryPlugin

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.vers = [
            minSdk       : 17,
            compileSdk   : 28,
            androidPlugin: '3.3.2',
            android      : [
                    appcompat: '1.1.0-alpha03',
                    test     : [
                            core        : '1.1.0',
                            runner      : '1.1.2-alpha02',
                            espressoCore: '3.2.0-alpha02',
                            junitExt    : '1.1.0'
                    ]
            ],
            auil         : '1.8.5',
            gson         : '2.8.5',
            jackson      : '2.9.8',
            okhttp       : '1.2.1',
            volley       : '1.1.1',
            simplexml    : '2.7.1',
            test         : [
                    awaitility      : '3.1.6',
                    commonio        : '2.6',
                    hamcrest        : '2.1',
                    httpClient      : '4.1.2',
                    junit           : '4.12',
                    mockito         : '2.26.0',
                    mockHttpServer  : '4.1',
                    powermock       : '2.0.0',
                    robolectric     : '4.2',
                    shadowHttpClient: '4.2.1'
            ]
    ]
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath "com.android.tools.build:gradle:${vers.androidPlugin}"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

subprojects {
    plugins.withType(AppPlugin) {
        android {
            lintOptions {
                lintConfig file("${rootProject.projectDir}/lint.xml")
            }
        }
    }
    plugins.withType(LibraryPlugin) {
        android {
            lintOptions {
                lintConfig file("${rootProject.projectDir}/lint.xml")
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
